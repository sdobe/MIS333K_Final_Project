// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sp19team9finalproject.DAL;

namespace sp19team9finalproject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("sp19team9finalproject.Models.AppUser", b =>
                {
                    b.Property<int>("AppUserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyID");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<decimal>("GPA");

                    b.Property<DateTime>("GradDate");

                    b.Property<string>("LastName");

                    b.Property<int?>("MajorID");

                    b.Property<string>("Password");

                    b.Property<int>("PositionType");

                    b.HasKey("AppUserID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("MajorID");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.Application", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppUserID");

                    b.Property<int?>("PositionID");

                    b.Property<string>("Result");

                    b.HasKey("ApplicationID");

                    b.HasIndex("AppUserID");

                    b.HasIndex("PositionID");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Industry");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.Interview", b =>
                {
                    b.Property<int>("InterviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<int?>("IntervieweeAppUserID");

                    b.Property<int?>("InterviewerAppUserID");

                    b.Property<string>("RoomNumber");

                    b.HasKey("InterviewID");

                    b.HasIndex("IntervieweeAppUserID");

                    b.HasIndex("InterviewerAppUserID");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.Major", b =>
                {
                    b.Property<int>("MajorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("MajorID");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.MajorDetail", b =>
                {
                    b.Property<int>("MajorDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MajorID");

                    b.Property<int?>("PositionID");

                    b.HasKey("MajorDetailID");

                    b.HasIndex("MajorID");

                    b.HasIndex("PositionID");

                    b.ToTable("MajorDetails");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.Position", b =>
                {
                    b.Property<int>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyID");

                    b.Property<DateTime>("Deadline");

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.HasKey("PositionID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.AppUser", b =>
                {
                    b.HasOne("sp19team9finalproject.Models.Company", "Company")
                        .WithMany("AppUsers")
                        .HasForeignKey("CompanyID");

                    b.HasOne("sp19team9finalproject.Models.Major", "Major")
                        .WithMany("AppUsers")
                        .HasForeignKey("MajorID");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.Application", b =>
                {
                    b.HasOne("sp19team9finalproject.Models.AppUser", "AppUser")
                        .WithMany("Applications")
                        .HasForeignKey("AppUserID");

                    b.HasOne("sp19team9finalproject.Models.Position", "Position")
                        .WithMany("Applications")
                        .HasForeignKey("PositionID");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.Interview", b =>
                {
                    b.HasOne("sp19team9finalproject.Models.AppUser", "Interviewee")
                        .WithMany("InterviewsSuffered")
                        .HasForeignKey("IntervieweeAppUserID");

                    b.HasOne("sp19team9finalproject.Models.AppUser", "Interviewer")
                        .WithMany("InterviewsGiven")
                        .HasForeignKey("InterviewerAppUserID");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.MajorDetail", b =>
                {
                    b.HasOne("sp19team9finalproject.Models.Major", "Major")
                        .WithMany("MajorDetails")
                        .HasForeignKey("MajorID");

                    b.HasOne("sp19team9finalproject.Models.Position", "Position")
                        .WithMany("MajorDetails")
                        .HasForeignKey("PositionID");
                });

            modelBuilder.Entity("sp19team9finalproject.Models.Position", b =>
                {
                    b.HasOne("sp19team9finalproject.Models.Company", "Company")
                        .WithMany("Positions")
                        .HasForeignKey("CompanyID");
                });
#pragma warning restore 612, 618
        }
    }
}
